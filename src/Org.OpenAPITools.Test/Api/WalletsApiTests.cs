/*
 * BVNK API Endpoints
 *
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing WalletsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WalletsApiTests
    {
        private WalletsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WalletsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WalletsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' WalletsApi
            //Assert.IsInstanceOf(typeof(WalletsApi), instance);
        }

        
        /// <summary>
        /// Test TransactionReport
        /// </summary>
        [Test]
        public void TransactionReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? walletId = null;
            //string fromDate = null;
            //string toDate = null;
            //string format = null;
            //string transactionType = null;
            //var response = instance.TransactionReport(walletId, fromDate, toDate, format, transactionType);
            //Assert.IsInstanceOf(typeof(List<TransactionReport>), response, "response is List<TransactionReport>");
        }
        
        /// <summary>
        /// Test WalletBalanceList
        /// </summary>
        [Test]
        public void WalletBalanceListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string date = null;
            //var response = instance.WalletBalanceList(date);
            //Assert.IsInstanceOf(typeof(List<Balance>), response, "response is List<Balance>");
        }
        
        /// <summary>
        /// Test WalletCreate
        /// </summary>
        [Test]
        public void WalletCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WalletRequest walletRequest = null;
            //var response = instance.WalletCreate(walletRequest);
            //Assert.IsInstanceOf(typeof(Wallet), response, "response is Wallet");
        }
        
        /// <summary>
        /// Test WalletList
        /// </summary>
        [Test]
        public void WalletListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? offset = null;
            //int? max = null;
            //var response = instance.WalletList(offset, max);
            //Assert.IsInstanceOf(typeof(List<Wallet>), response, "response is List<Wallet>");
        }
        
        /// <summary>
        /// Test WalletRGet
        /// </summary>
        [Test]
        public void WalletRGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //var response = instance.WalletRGet(id);
            //Assert.IsInstanceOf(typeof(Wallet), response, "response is Wallet");
        }
        
    }

}
